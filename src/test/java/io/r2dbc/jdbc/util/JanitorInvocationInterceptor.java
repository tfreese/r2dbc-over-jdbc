// Created: 05.04.2021
package io.r2dbc.jdbc.util;

import java.lang.reflect.Method;

import org.junit.jupiter.api.extension.ExtensionContext;
import org.junit.jupiter.api.extension.InvocationInterceptor;
import org.junit.jupiter.api.extension.ReflectiveInvocationContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Creates and deletes the Database-Tables before and after each Test-Method.
 *
 * @author Thomas Freese
 */
public class JanitorInvocationInterceptor implements InvocationInterceptor {
    private static final Logger LOGGER = LoggerFactory.getLogger(JanitorInvocationInterceptor.class);

    @Override
    public void interceptTestMethod(final Invocation<Void> invocation, final ReflectiveInvocationContext<Method> invocationContext, final ExtensionContext extensionContext)
            throws Throwable {
        final DbServerExtension serverExtension = invocationContext.getArguments().stream()
                .filter(DbServerExtension.class::isInstance)
                .map(DbServerExtension.class::cast)
                .findFirst().orElse(null);

        createTable(serverExtension);

        try {
            invocation.proceed();
        }
        finally {
            dropTable(serverExtension);
        }
    }

    @Override
    public void interceptTestTemplateMethod(final Invocation<Void> invocation, final ReflectiveInvocationContext<Method> invocationContext, final ExtensionContext extensionContext)
            throws Throwable {
        interceptTestMethod(invocation, invocationContext, extensionContext);
    }

    private void createTable(final DbServerExtension serverExtension) {
        try {
            serverExtension.getJdbcOperations().execute("CREATE TABLE test (test_value INTEGER)");
        }
        catch (Exception ex) {
            LOGGER.error(ex.getMessage());
        }

        try {
            serverExtension.getJdbcOperations()
                    .execute("CREATE TABLE test_auto (id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY, test_value INTEGER)");
        }
        catch (Exception ex) {
            LOGGER.error(ex.getMessage());
        }
    }

    private void dropTable(final DbServerExtension serverExtension) {
        try {
            serverExtension.getJdbcOperations().execute("DROP TABLE test");
        }
        catch (Exception ex) {
            LOGGER.error(ex.getMessage());
        }

        try {
            serverExtension.getJdbcOperations().execute("DROP TABLE test_auto");
        }
        catch (Exception ex) {
            LOGGER.error(ex.getMessage());
        }
    }
}
