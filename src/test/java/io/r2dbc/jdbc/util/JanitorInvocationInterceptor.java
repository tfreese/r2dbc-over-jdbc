// Created: 05.04.2021
package io.r2dbc.jdbc.util;

import java.lang.reflect.Method;
import java.util.List;

import org.junit.jupiter.api.extension.ExtensionContext;
import org.junit.jupiter.api.extension.InvocationInterceptor;
import org.junit.jupiter.api.extension.ReflectiveInvocationContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.core.JdbcOperations;

/**
 * Erzeugt und l√∂scht die DB-Tabellen vor und nach jeder Test-Methode.
 *
 * @author Thomas Freese
 */
public class JanitorInvocationInterceptor implements InvocationInterceptor
{
    /**
     *
     */
    private static final Logger LOGGER = LoggerFactory.getLogger(JanitorInvocationInterceptor.class);

    /**
     * @see org.junit.jupiter.api.extension.InvocationInterceptor#interceptTestMethod(org.junit.jupiter.api.extension.InvocationInterceptor.Invocation,
     * org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)
     */
    @Override
    public void interceptTestMethod(final Invocation<Void> invocation, final ReflectiveInvocationContext<Method> invocationContext,
                                    final ExtensionContext extensionContext)
            throws Throwable
    {
        List<Object> arguments = invocationContext.getArguments();
        Object lastArgument = null;

        if (!arguments.isEmpty())
        {
            lastArgument = arguments.get(arguments.size() - 1);
        }

        DbServerExtension server = null;

        if (lastArgument instanceof DbServerExtension)
        {
            server = (DbServerExtension) lastArgument;
        }

        if (server != null)
        {
            createTable(server.getJdbcOperations());
        }

        try
        {
            invocation.proceed();
        }
        finally
        {
            if (server != null)
            {
                dropTable(server.getJdbcOperations());
            }
        }
    }

    /**
     * @see org.junit.jupiter.api.extension.InvocationInterceptor#interceptTestTemplateMethod(org.junit.jupiter.api.extension.InvocationInterceptor.Invocation,
     * org.junit.jupiter.api.extension.ReflectiveInvocationContext, org.junit.jupiter.api.extension.ExtensionContext)
     */
    @Override
    public void interceptTestTemplateMethod(final Invocation<Void> invocation, final ReflectiveInvocationContext<Method> invocationContext,
                                            final ExtensionContext extensionContext)
            throws Throwable
    {
        interceptTestMethod(invocation, invocationContext, extensionContext);
    }

    /**
     * @param jdbcOperations {@link JdbcOperations}
     */
    private void createTable(final JdbcOperations jdbcOperations)
    {
        // LOGGER.debug("createTables");

        try
        {
            jdbcOperations.execute("CREATE TABLE tbl (value INTEGER)");
        }
        catch (Exception ex)
        {
            // Ignore
            LOGGER.error(ex.getMessage());
        }

        try
        {
            // jdbcOperations.execute("CREATE TABLE tbl_auto (id INTEGER IDENTITY, value INTEGER);");
            jdbcOperations
                    .execute("CREATE TABLE tbl_auto (id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY, value INTEGER)");
        }
        catch (Exception ex)
        {
            // Ignore
            LOGGER.error(ex.getMessage());
        }
    }

    /**
     * @param jdbcOperations {@link JdbcOperations}
     */
    private void dropTable(final JdbcOperations jdbcOperations)
    {
        // LOGGER.debug("dropTables");

        try
        {
            jdbcOperations.execute("DROP TABLE tbl");
        }
        catch (Exception ex)
        {
            // Ignore
            LOGGER.error(ex.getMessage());
        }

        try
        {
            jdbcOperations.execute("DROP TABLE tbl_auto");
        }
        catch (Exception ex)
        {
            // Ignore
            LOGGER.error(ex.getMessage());
        }

        // switch (databaseType)
        // {
        // case DERBY:
        // jdbcOperations.execute("DROP TABLE tbl");
        // jdbcOperations.execute("DROP TABLE tbl_auto");
        // break;
        //
        // default:
        // jdbcOperations.execute("DROP TABLE tbl if exists");
        // jdbcOperations.execute("DROP TABLE tbl_auto if exists");
        // }
    }
}
